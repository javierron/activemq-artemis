<?xml version="1.0" encoding="UTF-8"?>
<!-- ============================================================================= -->
<!-- Licensed to the Apache Software Foundation (ASF) under one or more            -->
<!-- contributor license agreements. See the NOTICE file distributed with          -->
<!-- this work for additional information regarding copyright ownership.           -->
<!-- The ASF licenses this file to You under the Apache License, Version 2.0       -->
<!-- (the "License"); you may not use this file except in compliance with          -->
<!-- the License. You may obtain a copy of the License at                          -->
<!--                                                                               -->
<!--     http://www.apache.org/licenses/LICENSE-2.0                                -->
<!--                                                                               -->
<!-- Unless required by applicable law or agreed to in writing, software           -->
<!-- distributed under the License is distributed on an "AS IS" BASIS,             -->
<!-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.      -->
<!-- See the License for the specific language governing permissions and           -->
<!-- limitations under the License.                                                -->
<!-- ============================================================================= -->

<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
        <!ENTITY % BOOK_ENTITIES SYSTEM "ActiveMQ_User_Manual.ent">
        %BOOK_ENTITIES;
        ]>
<chapter id="aerogear-integration">
    <title>AeroGear Integration</title>
    <para>AeroGears push technology provides support for different push notification technologies like Google Cloud Messaging,
        Apple's APNs or Mozilla's SimplePush. ActiveMQ allows you to configure a Connector Service that will consume messages
    from a queue and forward them to an AeroGear push server and subsequently sent as notifications to mobile devices.</para>
    <section>
    <title>Configuring an AeroGear Connector Service</title>
    <para>AeroGear Connector services are configured in the connector-services configuration:</para>
    <programlisting>
    &lt;connector-service name="aerogear-connector">
    &lt;factory-class>org.apache.activemq.integration.aerogear.AeroGearConnectorServiceFactory&lt;/factory-class>
    &lt;param key="endpoint" value="endpoint"/>
    &lt;param key="queue" value="jms.queue.aerogearQueue"/>
    &lt;param key="application-id" value="an applicationid"/>
    &lt;param key="master-secret" value="a mastersecret"/>
    &lt;/connector-service>
    &lt;address-setting match="jms.queue.lastValueQueue">
    &lt;last-value-queue>true&lt;/last-value-queue>
    &lt;/address-setting>
    </programlisting>
    <para>Shown are the required params for the connector service and are:</para>

        <itemizedlist>
            <listitem>
                <para><literal>endpoint</literal>. The endpoint or URL of you AeroGear application.</para>
            </listitem>
            <listitem>
                <para><literal>queue</literal>. The name of the queue to consume from.</para>
            </listitem>
            <listitem>
                <para><literal>application-id</literal>. The application id of your mobile application in AeroGear.</para>
            </listitem>
            <listitem>
                <para><literal>master-secret</literal>. The secret of your mobile application in AeroGear.</para>
            </listitem>
        </itemizedlist>
        <para>As well as these required paramaters there are the following optional parameters</para>
        <itemizedlist>
            <listitem>
                <para><literal>ttl</literal>. The time to live for the message once AeroGear receives it.</para>
            </listitem>
            <listitem>
                <para><literal>badge</literal>. The badge the mobile app should use for the notification.</para>
            </listitem>
            <listitem>
                <para><literal>sound</literal>. The sound the mobile app should use for the notification.</para>
            </listitem>
            <listitem>
                <para><literal>filter</literal>. A message filter(selector) to use on the connector.</para>
            </listitem>
            <listitem>
                <para><literal>retry-interval</literal>. If an error occurs on send, how long before we try again to connect.</para>
            </listitem>
            <listitem>
                <para><literal>retry-attempts</literal>. How many times we should try to reconnect after an error.</para>
            </listitem>
            <listitem>
                <para><literal>variants</literal>. A comma separated list of variants that should get the message.</para>
            </listitem>
            <listitem>
                <para><literal>aliases</literal>. A list of aliases that should get the message.</para>
            </listitem>
            <listitem>
                <para><literal>device-types</literal>. A list of device types that should get the messag.</para>
            </listitem>
        </itemizedlist>
        <para>More in depth explanations of the AeroGear related parameters can be found in the <ulink
                url="http://aerogear.org/push/">AeroGear Push docs</ulink></para>
    </section>
    <section>
        <title>How to send a message for AeroGear</title>
        <para>To send a message intended for AeroGear simply send a JMS Message and set the appropriate headers, like so</para>
        <programlisting>
    Message message = session.createMessage();

    message.setStringProperty("AEROGEAR_ALERT", "Hello this is a notification from ActiveMQ");

    producer.send(message);
        </programlisting>
        <para>The 'AEROGEAR_ALERT' property will be the alert sent to the mobile device.</para>
        <note><para>If the message does not contain this property then it will be simply ignored and left on the queue</para></note>
        <para>Its also possible to override any of the other AeroGear parameters by simply setting them on the message,
        for instance if you wanted to set ttl of a message you would:</para>
        <programlisting>
    message.setIntProperty("AEROGEAR_TTL", 1234);
        </programlisting>
        <para>or if you wanted to set the list of variants you would use:</para>
        <programlisting>
    message.setStringProperty("AEROGEAR_VARIANTS", "variant1,variant2,variant3");
        </programlisting>
        <para>Again refer to the AeroGear documentation for a more in depth view on how to use these settings</para>
    </section>
</chapter>